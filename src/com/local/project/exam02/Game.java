package com.local.project.exam02;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Game {
    protected static List<User> userList;
    private static Map<String, String> textGame;

    public static List<User> getUserList() {
        if (userList == null)
            userList = new ArrayList<>();
        return userList;
    }

    public static void main(String[] args) throws InterruptedException {

        Game game = new Game();
        System.out.println("\nзагрузка игры \"Лисенок\"");
        game.setTextGame();
        Thread.sleep(1000);
        System.out.println("\nигра загружена\n");

        User user1 = game.registrationUser(); // регистрация пользователя
        System.out.println("\nИгра началась\n");
        game.guessGenerated(user1);
        game.listener();
        System.out.println(textGame.get(user1.getParagraph()));

    }

    private void setTextGame() {
        textGame = new HashMap<>();
        textGame.put("Лисенок", "Каждое утро Лисёнок просыпался, завтракал и шёл увидеться с Бельчонком. Это утро не было исключением. Лисёнок пришёл на\n" +
                "их обычное место встречи, но Бельчонка там не было. Лисёнок ждал, ждал, но так и не смог дождаться своего друга. \"\n" +
                "Бельчонок не пропустил еще ни одной встречи, вдруг он попал в беду.\" - подумал Лисёнок. Как поступить Лисенку?\n" +
                "\n" +
                "1. Вернуться домой\n" +
                "2. Отправиться на поиски\n");
        textGame.put("Вернуться домой", "Вернувшись домой, Лисёнок нашёл там Бельчонка. Оказалось, что Бельчонок пришёл на место встречи раньше и увидел там рой\n" +
                "злобных пчел. Он поспешил предупредить об этом Лисёнка, но они разминулись. Наконец-то друзья нашли друг друга! Игра " +
                "завершилась успехом");
        textGame.put("Отправиться на поиски\n" ,
                "Все лесные жители были заняты своими делами и не обращали внимания на Лисёнка и его проблему. Но вдруг кто нибудь видел\n" +
                "Бельчонка... Лисёнок не знал, что ему делать. Помогите ему.\n" +
                "\n" +
                "1. Попытаться разузнать о Бельчонке у лесных жителей\n" +
                "2. Искать Бельчонка в одиночку");
        textGame.put("Попытаться разузнать о Бельчонке у лесных жителей\n",
                "Пока Лисёнок принимал решение, лесные жители разошлись кто куда. Остались только Сова и Волк. Но у Совы бывают проблемы\n" +
                "с памятью, а Волк может сильно разозлиться из-за расспросов. Кого выбрать?\n" +
                "\n" +
                "1. Расспросить Сову\n" +
                "2. Расспросить Волка\n");
        textGame.put("Искать Бельчонка в одиночку\n",
                "Лисёнок слишком долго плутал по лесу в поисках друга и сам не заметил, как заблудился. Теперь его самого нужно искать.\n" +
                "Игра завершилась неудачей");
        textGame.put("Расспросить Сову\n",
                "Сова долго не хотела говорить, но в итоге сказала, что видела испуганного Бельчонка, бежавшего вглубь леса. Все лесные\n" +
                "жители знают, что в глубине леса опасно, если Бельчонок там, ему срочно нужна помощь.\n" +
                "\n" +
                "1. Поверить Сове и отправиться вглубь леса\n" +
                "2. Сове не стоит верить -> Искать Бельчонка в одиночку\n");
        textGame.put("Расспросить Волка\n",
                "Волк оказался вполне дружелюбным, но помочь не смог. Лишь сказал, что маленькому лисенку не стоит бродить по лесу\n" +
                "одному. И как теперь поступить?\n" +
                "\n" +
                "1. Волк прав -> Вернуться домой\n" +
                "2. -> Искать Бельчонка в одиночку\n");
        textGame.put("Поверить Сове и отправиться вглубь леса\n",
                "В глубине леса Лисёнок встретил Медвежонка. Ленивый Медвежонок был готов рассказать все, что знает, если Лисёнок\n" +
                "принесёт ему мёда.\n" +
                "\n" +
                "1. Нет, потрачено слишком много времени, нужно идти дальше -> Искать Бельчонка в одиночку\n" +
                "2. Нужно воспользоваться шансом и раздобыть мёд");
        textGame.put("Нужно воспользоваться шансом и раздобыть мёд\n",
                "Лисёнок быстро нашёл мёд, но вокруг летал рой злобных пчел. Лисёнок всегда боялся пчёл, но и не найти друга он тоже\n" +
                "боялся.\n" +
                "\n" +
                "1. Подождать, вдруг пчёлы улетят\n" +
                "2. Нужно попытаться выкрасть мёд немедленно;");
        textGame.put("Подождать, вдруг пчёлы улетят\n",
                "Лисёнок подождал немного, и пчёлы разлетелись. Лисёнок без проблем набрал мёда. Вдруг он понял, что очень голоден. Что\n" +
                "же делать?\n" +
                "\n" +
                "1. Поесть немного и передохнуть\n" +
                "2. Скорее отнести мёд Медвежонку\n");
        textGame.put("Нужно попытаться выкрасть мёд немедленно\n",
                "Это была не лучшая идея. Пчёлы покусали Лисёнка, теперь ему самому нужна помощь. <b>Игра завершилась неудачей</b>\n");
        textGame.put("Поесть немного и передохнуть\n",
                "Пока Лисёнок ел, злобные пчёлы вернулись и покусали его. Лисёнку нужна помощь, он не сможет продолжить поиски. <b>Игра\n" +
                "завершилась неудачей</b>");
        textGame.put("Скорее отнести мёд Медвежонку\n",
                "Довольный Медвежонок рассказал Лисёнку, что очень хорошо знает семью Белок и уверен, что Бельчонок никогда не пошёл бы в\n" +
                "глубь леса. Он заверял Лисёнка, что Белки не попадают в неприятности, и что Совам нельзя верить, он также уговаривал\n" +
                "Лисёнка вернуться домой.\n" +
                "1. Медвежонок ничего не знает, нужно продолжить поиски -> Искать Бельчонка в одиночку\n" +
                "2. Может быть он прав и Лисёнок просто паникует -> Вернуться домой\n");

    }

    private User registrationUser() {
        System.out.println("Регистрация пользователя игры");
        userList = getUserList(); // получаем список пользователей
        System.out.println("Введите Login, он должен содержать не более 10 символов");
        User userReg;
        String login;
        try{
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            while ((login = reader.readLine()) != null) {
                if (login.isEmpty()) throw new IllegalArgumentException("login не может быть пустым");
                if (login.length() > 10) throw new IllegalArgumentException("Login должен быть не более 10 символов");
                final String str = login;
                boolean loginIsAlreadyRegistered = userList.stream().map(User::getLogin).noneMatch(x -> x.equals(str));
                if (userList != null && !loginIsAlreadyRegistered) {
                    System.out.println("Login занят, попробуйте другой");
                } else {
                    userReg = new User(login);
                    userList.add(userReg);
                    System.out.printf("Пользователь %s успешно зарегистрирован\n", userReg);
                    return userReg;
                }
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return null;
    }
    private void listener() {
        System.out.println("Выберите один из вариантов ответов и ведите на клавиатуре целое число от 1 до 3");
        Scanner scanner = new Scanner(System.in);
        int number;
        while (scanner.hasNextInt()) {
            number = scanner.nextInt();
            if (number < 1 || number > 3){
                listener();
            }
            System.out.println("Ответ " + number);
            return;
        }
    }
    private void guessGenerated(User user) {
        System.out.println(textGame.get(user.getParagraph()));

    }
}
